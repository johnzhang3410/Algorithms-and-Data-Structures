/****************************************************
 * Executable:  Resizable_deque_driver
 * Author:  Douglas Wilhelm Harder
 * Copyright (c) 2006-14 by Douglas Wilhelm Harder.  All rights reserved.
 *
 * DO NOT EDIT THIS FILE
 *
 * Create an instance of the Resizable_deque_tester<int>
 * or Resizable_deque_tester<double> classes and call
 * the member function run().
 *
 * The member function run() will interpret the
 * input appropriately and exit when the interpreter
 * receives either the command 'exit' or and
 * end-of-file.
 ****************************************************/

#include <iostream>
#include <cstring>
#include "Tester.h"
#include "Resizable_deque_tester.h"

int main( int argc, char *argv[] ) {
	
	//Resizable_deque<int> dq2(32);
	
	//dq2.front() = 1;
	//dq2.back() = 2;
	
	/*for (int i{}; i < dq2.capacity(); i++){
		
		push_front(i*i);
		
	}	*/
	
	/*Resizable_deque<int> dq1 = dq2;
	
	
	
	if((dq1.size() == dq2.size()) && (dq2.size() == 0)){
		std::cout << "size is true" << std::endl;
	}else{
		std::cout << "size is false" << std::endl;
	}	
	
	if((dq1.capacity() == dq2.capacity()) && (dq1.capacity() == 32)){
		std::cout << "current capacity is true" << std::endl;
	}else{
		std::cout << "current capacity is false" << std::endl;
	}		
		
	if ((dq1.initial_capacity() == dq2.initial_capacity()) && (dq1.initial_capacity() == 32)){
		std::cout << "initial array capacity is true" << std::endl;
	}else{
		std::cout << "initial array capacity is false" << std::endl;
	}			
	*/
	
		
		/*if (dq1.front() == dq2.front()){
			std::cout << "front is true" << std::endl;
		}else{
			std::cout << "front is false" << std::endl;
		}
		
	
	if (dq1.back() == dq2.front()){
		std::cout << "back is true" << std::endl;
	}else{
		std::cout << "back is false" << std::endl;
	}	*/	
		
	
	
	if ( argc > 2 ) {
		std::cerr << "Expecting at most one command-line argument" << std::endl;

		return -1;
	}

	std::cout << "Starting Test Run" << std::endl;

	if ( argc == 1 || !std::strcmp( argv[1], "int" ) ) {
		if ( argc == 1 ) {
			std::cerr << "Expecting a command-line argument of either 'int' or 'double', but got none; using 'int' by default." << std::endl;
		}

		Resizable_deque_tester<int> tester;

		tester.run();
	} else if ( !std::strcmp( argv[1], "double" ) ) {
		Resizable_deque_tester<double> tester;

		tester.run();
	}

	std::cout << "Finishing Test Run" << std::endl;

	return 0;
}
